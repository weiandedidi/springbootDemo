spring:
  mvc:
    view:
      prefix: /WEB-INF/view/
      suffix: .jsp
  profiles:
    active: @bootdemo.enviroment@
  http:
    encoding:
      charset: UTF-8
  datasource:
    #   数据源基本配置
    username: @jdbc.name@
    password: @jdbc.password@
    driver-class-name: com.mysql.jdbc.Driver
    url: @jdbc.url@

    #     druid配置
    #   type: com.alibaba.druid.pool.DruidDataSource
    #   数据源其他配置
    initialSize: 5
    minIdle: 5
    maxActive: 20
    maxWait: 60000
    timeBetweenEvictionRunsMillis: 60000
    minEvictableIdleTimeMillis: 300000
    validationQuery: SELECT 1 FROM DUAL
    testWhileIdle: true
    testOnBorrow: false
    testOnReturn: false
    poolPreparedStatements: true
    #   配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,log4j
    maxPoolPreparedStatementPerConnectionSize: 20
    useGlobalDataSourceStat: true
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=500

  #     bonecp 配置
  #     type: com.jolbox.bonecp.BoneCPDataSource
  #     idleConnectionTestPeriodInMinutes: 240
  #     idleMaxAgeInMinutes: 60
  #     maxConnectionsPerPartition: 40
  #     partitionCount: 3
  #     acquireIncrement: 5
  #     statementsCacheSize: 50
  #     defaultAutoCommit: "true"
  #     connectionTimeoutInMs: 30000

  #cache的选择 redis simple 等
  cache:
    type: redis
  #redis 配置
  redis:
    database: 0
    host: 127.0.0.1
    port: 6379
    password: maqidi4915338

    jedis:
      pool:
        max-idle: 8
        max-wait: -1
        max-active: 8
        min-idle: 0
    timeout: 5000

  # kafka 消息队列配置
  kafka:
    bootstrap-servers: 10.5.233.60:9092
    # 生产者
    producer:
      retries: 0
      # 编码方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 每次批量的消息数字
      batch-size: 16384
      buffer-memory: 33554432



    consumer:
      group-id: mygroup
      auto-offset-reset: earliest     #从头消费
      enable-auto-commit: true
      auto-commit-interval: 100 #自动提交
      #  ====== 解码方式 =========
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
  # multipart 多文件上传配置
  servlet:
    multipart:
      enabled: true
      max-file-size: 2MB
      max-request-size: 10MB














#mybatis 缓存 别名
mybatis:
  type-aliases-package: com.qidi.bootdemo.model
  config-location: classpath:mybatis/mybatis-config.xml
  mapper-locations: classpath:mybatis/mapper/**/*.xml



person:
  name: 马启迪
  age: 18
  accountMap: {1: 100,2: 200}
  departmentNos:
  - 101
  - 102
  department:
    name: market
    departNo: 101


#监控默认暴露
management:
  endpoints:
    enabled-by-default: true


#   test
---
server:
  port: 8080
spring:
  profiles: test


logging:
  file: ./logs/demo.log
  level:
    com.qidi.bootdemo: debug


---


#   dev
server:
  port: 8081
spring:
  profiles: dev
#  日志配置
logging:
  file: ./logs/demo.log
  level:
    com.qidi.bootdemo: trace


---
# prod
server:
  port: 8082
spring:
  profiles: prod
logging:
  file: ./logs/demo.log
  level:
    com.qidi.bootdemo: info



